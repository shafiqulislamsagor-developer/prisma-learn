generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum UserRole {
    user
    admin
}

model Post {
    id           Int            @id @default(autoincrement())
    title        String
    content      String
    published    Boolean        @default(false)
    authorId     Int
    author       User           @relation(fields: [authorId], references: [id]) // one to meny relationship with this model > type
    createdAt    DateTime       @default(now())
    updatedAt    DateTime       @updatedAt
    postCategory PostCategory[] //many to many relationship with this model > automatically generated

    @@map("posts")
}

model User {
    id       Int      @id @default(autoincrement())
    username String   @unique
    email    String   @unique
    role     UserRole @default(user)
    profile  Profile? //one to one relationship with this model > automatically generated
    Post     Post[] // one to many relationship with this model > automatically generated

    @@map("users")
}

model Profile {
    id     Int     @id @default(autoincrement())
    bio    String?
    userId Int     @unique
    user   User    @relation(fields: [userId], references: [id]) //one to one relationship with this model > type

    @@map("Profiles")
}

model Category {
    id           Int            @id @default(autoincrement())
    name         String
    postCategory PostCategory[] //many to many relationship with this model > automatically generated

    @@map("categories")
}

model PostCategory {
    postId     Int
    post       Post     @relation(fields: [postId], references: [id]) //many to many relationship with this model > type
    categoryId Int
    category   Category @relation(fields: [categoryId], references: [id]) //many to many relationship with this model > type

    @@id([postId, categoryId])
    @@map("post_category")
}
